/*******************************************************************************
 * @file	canEnumTypes.h
 * @brief	
 * @author	@br0nt0
 * @date	2024
 ******************************************************************************/
#ifndef CANENUMTYPES_H_
#define CANENUMTYPES_H_
/******************************************************************************/

/******************************************************************************/
enum
{
	CAN_NORMAL_OPERATION = 0u,
	CAN_DISABLE,
	CAN_LOOPBACK,
	CAN_LISTEN_ONLY,
	CAN_CONFIGURATION,
	CAN_LISTEN_ALL_MESSAGES = 7u
};

enum
{
	CAN_FIFO0_EVENT = 0x0u,
	CAN_FIFO1_EVENT,
	CAN_FIFO2_EVENT,
	CAN_FIFO3_EVENT,
	CAN_FIFO4_EVENT,
	CAN_FIFO5_EVENT,
	CAN_FIFO6_EVENT,
	CAN_FIFO7_EVENT,
	CAN_FIFO8_EVENT,
	CAN_FIFO9_EVENT,
	CAN_FIFO10_EVENT,
	CAN_FIFO11_EVENT,
	CAN_FIFO12_EVENT,
	CAN_FIFO13_EVENT,
	CAN_FIFO14_EVENT,
	CAN_FIFO15_EVENT,
	CAN_FIFO16_EVENT,
	CAN_FIFO17_EVENT,
	CAN_FIFO18_EVENT,
	CAN_FIFO19_EVENT,
	CAN_FIFO20_EVENT,
	CAN_FIFO21_EVENT,
	CAN_FIFO22_EVENT,
	CAN_FIFO23_EVENT,
	CAN_FIFO24_EVENT,
	CAN_FIFO25_EVENT,
	CAN_FIFO26_EVENT,
	CAN_FIFO27_EVENT,
	CAN_FIFO28_EVENT,
	CAN_FIFO29_EVENT,
	CAN_FIFO30_EVENT,
	CAN_FIFO31_EVENT,
	CAN_NO_EVENT = 0x40u,
	CAN_ERROR_EVENT,
	CAN_WAKEUP_EVENT,
	CAN_RX_CHANNEL_OVERFLOW_EVENT,
	CAN_ADDRESS_ERROR_EVENT,
	CAN_BUS_BANDWIDTH_ERROR,
	CAN_TIMESTAMP_TIMER_EVENT,
	CAN_MODE_CHANGE_EVENT,
	CAN_INVALID_MESSAGE_RECEIVED_EVENT
};

enum
{
	CAN_RX_FIFO_NOT_EMPTY = 0x1u,
	CAN_RX_FIFO_HALF_FULL = 0x2u,
	CAN_RX_FIFO_FULL = 0x4u,
	CAN_RX_FIFO_OVERFLOW = 0x8u,
	CAN_RX_FIFO_ANY_EVENT = 0xFu,
	CAN_TX_FIFO_EMPTY = 0x100u,
	CAN_TX_FIFO_HALF_EMPTY = 0x200u,
	CAN_TX_FIFO_NOT_FULL = 0x400u,
	CAN_TX_FIFO_ANY_EVENT = 0x700u
};

enum
{
	CAN_TX_EVENT = 0x1u,
	CAN_RX_EVENT = 0x2u,
	CAN_TIMESTAMP_TIMER_OVERFLOW_EVENT = 0x4u,
	CAN_OPERATION_MODE_CHANGE_EVENT = 0x8u,
	CAN_RX_OVERFLOW_EVENT = 0x800u,
	CAN_SYSTEM_ERROR_EVENT = 0x1000u,
	CAN_BUS_ERROR_EVENT = 0x2000u,
	CAN_BUS_ACTIVITY_WAKEUP_EVENT = 0x4000u,
	CAN_INVALID_RX_MESSAGE_EVENT = 0x8000u
};

enum
{
	CAN_FILTER0,
	CAN_FILTER1,
	CAN_FILTER2,
	CAN_FILTER3,
	CAN_FILTER4,
	CAN_FILTER5,
	CAN_FILTER6,
	CAN_FILTER7,
	CAN_FILTER8,
	CAN_FILTER9,
	CAN_FILTER10,
	CAN_FILTER11,
	CAN_FILTER12,
	CAN_FILTER13,
	CAN_FILTER14,
	CAN_FILTER15,
	CAN_FILTER16,
	CAN_FILTER17,
	CAN_FILTER18,
	CAN_FILTER19,
	CAN_FILTER20,
	CAN_FILTER21,
	CAN_FILTER22,
	CAN_FILTER23,
	CAN_FILTER24,
	CAN_FILTER25,
	CAN_FILTER26,
	CAN_FILTER27,
	CAN_FILTER28,
	CAN_FILTER29,
	CAN_FILTER30,
	CAN_FILTER31,
	CAN_NUMBER_OF_FILTERS
};

enum
{
	CAN_EID,
	CAN_SID
};

enum
{
	CAN_FILTER_MASK0,
	CAN_FILTER_MASK1,
	CAN_FILTER_MASK2,
	CAN_FILTER_MASK3,
	CAN_NUMBER_OF_FILTER_MASKS
};

enum
{
	CAN_FILTER_MASK_ANY_TYPE,
	CAN_FILTER_MASK_IDE_TYPE
};

enum
{
	CAN_TX_RX_WARNING_STATE = 0x01u,
	CAN_RX_WARNING_STATE = 0x02u,
	CAN_TX_WARNING_STATE = 0x04u,
	CAN_RX_BUS_PASSIVE_STATE = 0x08u,
	CAN_TX_BUS_PASSIVE_STATE = 0x10u,
	CAN_TX_BUS_OFF_STATE = 0x20u
};
typedef enum
{
	CAN1 = 0u,
	CAN2 = 1u,
	CAN_NUMBER_OF_MODULES
} canModule_t;

typedef enum
{
	CAN_FIFO0 = 0u,
	CAN_FIFO1,
	CAN_FIFO2,
	CAN_FIFO3,
	CAN_FIFO4,
	CAN_FIFO5,
	CAN_FIFO6,
	CAN_FIFO7,
	CAN_FIFO8,
	CAN_FIFO9,
	CAN_FIFO10,
	CAN_FIFO11,
	CAN_FIFO12,
	CAN_FIFO13,
	CAN_FIFO14,
	CAN_FIFO15,
	CAN_FIFO16,
	CAN_FIFO17,
	CAN_FIFO18,
	CAN_FIFO19,
	CAN_FIFO20,
	CAN_FIFO21,
	CAN_FIFO22,
	CAN_FIFO23,
	CAN_FIFO24,
	CAN_FIFO25,
	CAN_FIFO26,
	CAN_FIFO27,
	CAN_FIFO28,
	CAN_FIFO29,
	CAN_FIFO30,
	CAN_FIFO31,
	CAN_ALL_FIFOS
} canFifo_t;

typedef enum
{
	CAN_TX_FIFO_TRANSMITTING = 0x8u,
	CAN_TX_FIFO_ERROR = 0x10u,
	CAN_TX_FIFO_ARBITRATION_LOST = 0x20u
} canTxFifoStatus_t;

#endif /* CANENUMTYPES_H_ */
